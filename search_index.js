var documenterSearchIndex = {"docs":
[{"location":"chapter7/#","page":"7 - Documenting the modules","title":"7 - Documenting the modules","text":"Documenting the modules","category":"page"},{"location":"chapter7/#documenter.jl-1","page":"7 - Documenting the modules","title":"documenter.jl","text":"","category":"section"},{"location":"chapter7/#Basic-folder-structure-1","page":"7 - Documenting the modules","title":"Basic folder structure","text":"","category":"section"},{"location":"chapter7/#make.jl-1","page":"7 - Documenting the modules","title":"make.jl","text":"","category":"section"},{"location":"chapter7/#Referring-to-modules-1","page":"7 - Documenting the modules","title":"Referring to modules","text":"","category":"section"},{"location":"chapter7/#Run-tests-1","page":"7 - Documenting the modules","title":"Run tests","text":"","category":"section"},{"location":"references/#References-1","page":"References","title":"References","text":"","category":"section"},{"location":"references/#Julia-1","page":"References","title":"Julia","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Think Julia\nThe Emergent Features of JuliaLang: Part I\nThe Emergent Features of JuliaLang: Part II - Traits\nParallel Computing\nNaelsonDouglas/DistributedMachineLearningThesis","category":"page"},{"location":"references/#Julia-Unicode-1","page":"References","title":"Julia Unicode","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Unicode Input","category":"page"},{"location":"references/#Julia-Wikibooks-1","page":"References","title":"Julia Wikibooks","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Index\nIntroducing Julia/Types","category":"page"},{"location":"references/#Julia-Machine-Learning-1","page":"References","title":"Julia Machine Learning","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Data science for managers: Programming languages","category":"page"},{"location":"references/#Julia-Package-Manger-1","page":"References","title":"Julia Package Manger","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"A Brief Introduction to Package Management with Julia 1.0\nPkg + BinaryBuilder – The Next Generation","category":"page"},{"location":"references/#IJulia-1","page":"References","title":"IJulia","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Running a notebook server","category":"page"},{"location":"references/#Atom/Juno-Documentation-1","page":"References","title":"Atom/Juno Documentation","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Juno Documentation","category":"page"},{"location":"references/#Docker-1","page":"References","title":"Docker","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Dockerize an SSH service\nMultiple Computer Example\nRunning the \"Real Time Voice Cloning\" project in Docker","category":"page"},{"location":"references/#Miscellaneous-1","page":"References","title":"Miscellaneous","text":"","category":"section"},{"location":"references/#","page":"References","title":"References","text":"Auto Cue\nThis AI Clones Your Voice After Listening for 5 Seconds","category":"page"},{"location":"chapter1/#.-Introduction-Notebook-1","page":"1 - Intro Notebook","title":"1. Introduction Notebook","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Pages = [\"chapter1.md\"]","category":"page"},{"location":"chapter1/#What-is-a-notebook?-1","page":"1 - Intro Notebook","title":"What is a notebook?","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"In this case, \"notebook\" or \"notebook documents\" denote documents that contain both code and rich text elements, such as figures, links, equations, ... Because of the mix of  code and text elements, these documents are the ideal place to bring together an analysis description, and its results, as well as, they can be executed perform the data analysis in real tme.See","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Top","category":"page"},{"location":"chapter1/#Options-to-use-a-notebook-1","page":"1 - Intro Notebook","title":"Options to use a notebook","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"You have several option to work with IJulia:","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"You have installed Julia on your own machine.\nYou have installed Docker on your own machine and run IJulia from a container with Julia and IJulia installed.\nYou make use of the IJulia server installed on the machne of your instructor.","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"The IJulia Notebook is installed on the machine of the instructor, but you can also install IJula on your own notebook. Follow the instruction in the appendix.","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Top","category":"page"},{"location":"chapter1/#Starting-IJulia-1","page":"1 - Intro Notebook","title":"Starting IJulia","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Ask your instructor for the public ip-address and the token.","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"The first time you enter the IJulia server, it will ask you one time for the token.","category":"page"},{"location":"chapter1/#Login-to-the-IJulia-server-1","page":"1 - Intro Notebook","title":"Login to the IJulia server","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Step Action Comment\n1 Start browser \n2 http://x.x.x.x:8888 Ask instructor for the complete the public ip-address of the IJulia server\n3 Enter the token in the Password or token field \n4 Click on the Log in button ","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Top","category":"page"},{"location":"chapter1/#Create-a-new-notebook-1","page":"1 - Intro Notebook","title":"Create a new notebook","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"(Image: Test)","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Step Action/Response Comment\n1 Click on work directory \n2 Click on button New Open New menu.\n3 Select on item Julia.x.x.x Create a new Julia Notebook.\n New Notebook is opened \n4 Place the cursor in the first cel In this cell you can type your code.\n5 println(\"Hello World!\") Type your Julia code.\n6 Shift-Enter Activate the code and create a new cell","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Top","category":"page"},{"location":"chapter1/#Notebook-commands-1","page":"1 - Intro Notebook","title":"Notebook commands","text":"","category":"section"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Working with a Notebook is rather intuitive. Here are some commands you will often use.","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Command Comment\nShift-Enter Execute code and create a new cell below.\nCtrl-Enter Execute code and stay in the cell\nTab Code completion, e.g. printl-Tab => println.\nDouble Tab List with option, e.g. print-Tab displays print, println, and printstyled\n\\sqrt-tab Special characters, in this case √.\nEsc-A Create empty cell above the current cell.\nEsc-B Create empty cell below current cell.\nEsc-M Change to a markdown cell.\nEsc-Y Change to code cell.","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Click on the keyboard icon to see more options.","category":"page"},{"location":"chapter1/#","page":"1 - Intro Notebook","title":"1 - Intro Notebook","text":"Top","category":"page"},{"location":"chapter1/#Summary-1","page":"1 - Intro Notebook","title":"Summary","text":"","category":"section"},{"location":"chapter4/#.-Implementing-the-design-1","page":"4 - Implementing the design","title":"4. Implementing the design","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"UNDER DEVELOPMENT!","category":"page"},{"location":"chapter4/#Set-up-development-environment-1","page":"4 - Implementing the design","title":"Set-up development environment","text":"","category":"section"},{"location":"chapter4/#Application-folder-and-file-structure-1","page":"4 - Implementing the design","title":"Application folder and file structure","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"The final folder structure and files for our Julia application.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"tci.jl\n- src\n  - api\n    - api.jl\n  - domain\n    - domain.jl\n  - infrastructure\n    - inftrastructure.jl\n    - db.jl\n  - main.jl\n  - tcl.jl\n- test\n  - runtests.jl","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"Figure 1","category":"page"},{"location":"chapter4/#Activity:-Create-the-minimum-folder-structure-and-file-domain.jl-1","page":"4 - Implementing the design","title":"Activity: Create the minimum folder structure and file domain.jl","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"In this activity you will create the folder structure for our invoicing process. You partial tet-up the folder structure according to figure 1:","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"Create the base folder tci.jl.\nCreate the subfolders src and domain.\nCreate the file domain.jl.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"Step Action Comment\n1 $ mkdir tcj.jl mkdir is the linux command to create a folder.\n2 $ cd tcl.jl Change to the new created folder.\n3 $ atom . Start Atom in the current directory tcl.jl. Don't forget the point (.). Here are the instructions to install Atom/Juno if you haven't done it already.\n4 Remove all Taps in the right pane. The Tabs are: Telemerty Consent, Welcome, and Welcom Guide. A tab will be remove by clicking on the x-symbol.\n5 Right click on: tci.jl tci.jl is the base folder. It will also be the name of our future module.\n6 Select: New folder Dialog box + Enter the path for the new folder. appears.\n7 Type: src \n8 Press: <Enter> The new folder appears under the folder tci.jl\n9 Right click on: src \n10 Select: New folder \n11 Type: domain \n12 Press: <Enter> The new folder domain appears under the folder src.\n13 Select the folder: src \n14 RightS click on: domain \n15 Select: New file \n16 Type: domain.jl \n17 Press: <Enter> A new document appears in the pane next to the navigation pane.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"In the navigation pane you see the next folders and files:","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"- tci.jl\n  - src\n    - domain\n      - domain.jl","category":"page"},{"location":"chapter4/#Domain-1","page":"4 - Implementing the design","title":"Domain","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"For the domain object we will use struts. With the strut you can define a data type. There are abstract types and concrete types. We start with the concrete type.","category":"page"},{"location":"chapter4/#Concrete-data-types-1","page":"4 - Implementing the design","title":"Concrete data types","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"In the previous chapter we found the next resources for which we will create structs:","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"Invoice.\nInvoiceStatus: UNPAID, PAID.\nJournalRecord.\nMessage.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"The invoice structure.","category":"page"},{"location":"chapter4/#Creating-the-invoice-items-1","page":"4 - Implementing the design","title":"Creating the invoice items","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"Let's say that the invoice has a header and a body. We also have to do some calculations, e.g, the VAT. SAnd, we want to refer to the training and the orders, which are most likely stored at another entities, e.g. Marketing, and Sales.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"To keep things clear we create the following objects:","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"HeaderInvoice.\nBodyInvoice.\nMetaInvoice.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"Next, we combine these objects in blocks into the InvouceTraining.","category":"page"},{"location":"chapter4/#HeaderInvoice-1","page":"4 - Implementing the design","title":"HeaderInvoice","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"We use the keyword struct to define a data structure. You give it a name and on the next line you mention the fields and their data types.","category":"page"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"struct HeaderInvoice\n    invoiceNbr::String\n    nameOrganization::String\n    cityOrganization::String\n    orderRefOrganization::String\n    nameContact::String\n    emailContact::String\nend # defined HeaderInvoice","category":"page"},{"location":"chapter4/#BodyInvoice-1","page":"4 - Implementing the design","title":"BodyInvoice","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"struct BodyInvoice\n    nameTraining::String\n    pricePerStudent::Float64\n    students::Array{String, 1}\nend # defined BodyInvoice","category":"page"},{"location":"chapter4/#MetaInvoice-1","page":"4 - Implementing the design","title":"MetaInvoice","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"struct MetaInvoice\n    orderId::String\n    trainingId::String\n    date::DateTime\n    vatPercentage::Float64\n    currency::String\n    currencyRatio::Float64 #  against the euro\nend # defined MetaInvoice","category":"page"},{"location":"chapter4/#Enumerators-1","page":"4 - Implementing the design","title":"Enumerators","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"@enum InvoiceStatus begin\n    UNPAID\n    PAID\nend # defined enumerator for InvoiceStatus","category":"page"},{"location":"chapter4/#InvoiceTraining-1","page":"4 - Implementing the design","title":"InvoiceTraining","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"struct InvoiceTraining\n    id::String\n    date::DateTime\n    meta::MetaInvoice\n    header::HeaderInvoice\n    body::BodyInvoice\n    status::InvoiceStatus\nend # defined InvoiceTraining","category":"page"},{"location":"chapter4/#Adding-constructors-1","page":"4 - Implementing the design","title":"Adding constructors","text":"","category":"section"},{"location":"chapter4/#MetaInvoice-2","page":"4 - Implementing the design","title":"MetaInvoice","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"using DateTime\n\nstruct MetaInvoice\n    ...\n    # Constructores\n    MetaInvoice() = new(\"\", \"\", now(), 0.21, \"€\", 1)\n    #MetaInvoice(orderId, trainingId) = new(orderId, trainingId, now(), date, 0.21, \"€\", 1)\n    MetaInvoice(orderId, trainingId, date, vatPercentage, currency, currencyRatio) =\n        new(orderId, trainingId, date, vatPercentage, currency, currencyRatio)\nend # defined MetaInvoice","category":"page"},{"location":"chapter4/#InvoiceTraining-2","page":"4 - Implementing the design","title":"InvoiceTraining","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"using DateTime\n\nstruct InvoiceTraining\n    ...\n    # Constructors\n    InvoiceTraining(headerInvoice, bodyInvoice ) =\n        new( \"\", now(), MetaInvoice(), headerInvoice, bodyInvoice, UNPAID )\n    InvoiceTraining(id, date, meta, headerInvoice, bodyInvoice, status) =\n        new( id, date, meta, date, headerInvoice, bodyInvoice,  status )\nend # defined InvoiceTraining","category":"page"},{"location":"chapter4/#Testing-the-invoice-1","page":"4 - Implementing the design","title":"Testing the invoice","text":"","category":"section"},{"location":"chapter4/#","page":"4 - Implementing the design","title":"4 - Implementing the design","text":"# main.jl\n\ninclude(\"domain/domain.jl\")\n\nheaderInvoice = HeaderInvoice(\"1001\", \"AppliGate\", \"Landweg 74\\n3833 VM Leusden,\\nNetherlands\", \"PO123\", \"Rob Bontekoe\", \"r@b.nl\")\nbodyInvoice = BodyInvoice(\"Learn Smiling, Aug 30, 31 2019 \", 1000.0, [\"Jan\", \"Piet\"])\ninv = InvoiceTraining(headerInvoice, bodyInvoice)\n\n# print header\nprintln(inv.header.nameOrganization)\nprintln(\"Attn. $(inv.header.nameContact)\")\nprintln(\"$(inv.header.cityOrganization)\")\nprintln()\nprint(\"INVOICE\")\nprintln(\"Date: $(Date(inv.date))\")\nprintln(\"Invoice number: $(inv.header.invoiceNbr)\")\nprintln(\"=\"^40)\nprintln(\"Reference: $(inv.header.orderRefOrganization)\")\nprintln()\nprintln(\"Training: $(inv.body.nameTraining)\")\nprintln()\nnbrStudents = length(inv.body.students)\nunitprice = round(inv.body.pricePerStudent * inv.meta.currencyRatio; digits=2)\nprice = round(nbrStudents * unitprice; digits=2)\nvat = round(price*inv.meta.vatPercentage; digits=2)\ntotalprice = round(price + vat; digits=2)\nsymbol = inv.meta.currency\n\nusing Printf # package for formatting numbers\n\nprintln(\"#     Price                        Total\")\nprintln(\"=\"^40)\nprintln(\"$nbrStudents     $(@sprintf(\"%.2f\", unitprice))                   $symbol$(@sprintf(\"%.2f\", price))\")\nprintln()\nprintln(\"STUDENT(S)\")\nprintln(\"-\"^20)\nfor name in inv.body.students\n    println(name)\nend\nprintln()\nprintln(\"VAT                              $symbol$(@sprintf(\"%.2f\", vat))\")\nprintln(\"=\"^40)\nprintln(\"Total price                     $symbol$(@sprintf(\"%.2f\", totalprice))\")","category":"page"},{"location":"chapter4/#API-1","page":"4 - Implementing the design","title":"API","text":"","category":"section"},{"location":"chapter4/#Storage-1","page":"4 - Implementing the design","title":"Storage","text":"","category":"section"},{"location":"chapter4/#Infrastructure-1","page":"4 - Implementing the design","title":"Infrastructure","text":"","category":"section"},{"location":"appendix/#Appendix-1","page":"Appendix","title":"Appendix","text":"","category":"section"},{"location":"appendix/#Introduction-1","page":"Appendix","title":"Introduction","text":"","category":"section"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"I have a Windows 10 laptop with Ubuntu 18.04 installed on a separate disk. I start my machine form this disk.","category":"page"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"All instalation instructions in this course are based on Ubuntu. Whenever possible I like to create the course environment in a Docker container, for the instructor and for the students.","category":"page"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"In the course setup I use my machine as IJulia Notebook server.","category":"page"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"Ideas are from Andre Ferrari","category":"page"},{"location":"appendix/#Install-Docker-1","page":"Appendix","title":"Install Docker","text":"","category":"section"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"See: How To Install Docker On Ubuntu 18.04 Bionic Beaver","category":"page"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"Step Action Comment\n1 sudo apt-get update Update Software Repositories.\n2 sudo apt-get remove docker docker-engine docker.io Uninstall Old Versions of Docker\n3 sudo apt install docker.io Install Docker\n4 sudo systemctl start docker Start and Automate Docker\n5 sudo systemctl enable docker \n6 docker –version Check Docker Version","category":"page"},{"location":"appendix/#Dockerfile-1","page":"Appendix","title":"Dockerfile","text":"","category":"section"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"If you have installed Docker, you can create a Docker Image from a Dockerfile. From this image you can create Docker containers.","category":"page"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"FROM \"jupyter/minimal-notebook\"\n\nUSER root\n\nENV JULIA_VERSION=1.1.0\n\nRUN mkdir /opt/julia-${JULIA_VERSION} && \\\n    cd /tmp && \\\n    wget -q https://julialang-s3.julialang.org/bin/linux/x64/`echo ${JULIA_VERSION} | cut -d. -f 1,2`/julia-${JULIA_VERSION}-linux-x86_64.tar.gz && \\\n    tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C /opt/julia-${JULIA_VERSION} --strip-components=1 && \\\n    rm /tmp/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\n\nRUN ln -fs /opt/julia-*/bin/julia /usr/local/bin/julia\n\nUSER $NB_UID\n\n# Add packages and precompile\n\nRUN julia -e 'import Pkg; Pkg.update()' && \\\n    julia -e 'import Pkg; Pkg.add(\"Plots\"); using Plots' && \\\n    # julia -e 'import Pkg; Pkg.add(\"PlotlyJS\"); using PlotlyJS' && \\\n    julia -e 'import Pkg; Pkg.add(\"Distributions\"); using Distributions' && \\\n    julia -e 'import Pkg; Pkg.add(\"Optim\"); using Optim' && \\\n    julia -e 'import Pkg; Pkg.add(\"StatsPlots\"); using StatsPlots' && \\\n    julia -e 'import Pkg; Pkg.add(\"IJulia\"); using IJulia' && \\\n    fix-permissions /home/$NB_USER","category":"page"},{"location":"appendix/#Install-IJulia-1","page":"Appendix","title":"Install IJulia","text":"","category":"section"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"note: Note\nThe instruction are based on Ubuntu 18.04. We use the command line in a terminal window.First check whether Docker is installed on your system, by typing docker --version. If the command docker is not recognized, install Docker.","category":"page"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"Step Action Comment\n1 Open a terminal window on Ubuntu $ is the prompt of your OS.\n2 $ mkdir work Create the folder work. Optionally, create sub-directories with the names of your students.\n3 $ mkdir julia Create another directory `julia'.\n4 $ cd julia Goto the directory julia.\n5 Copy the code of the section Dockerfile to the clipboard \n6 $ nano Dockerfile Open the text editor nano.\n7 Ctrl-Shift-V Paste the text on the clipboard into the text editor.\n8 Ctrl-O Save the Dockerfile.\n9 Ctrl-X Exit nano\n10 $ ls list the content of the directory julia.\n11 $ cat Dockerfile Display the content of the Dockerfile.\n12 $ docker build -t julia-image . Create a Docker IJulia image. The name of the image is julia-image.\n13 $ docker run -v ~/work:/home/jovjan/work -p 8888:8888 --name julia julia-image Create a Docker container, and the IJulia Notebook server starts.\n14 Ctrl-C Stop the server.","category":"page"},{"location":"appendix/#Using-IJulia-1","page":"Appendix","title":"Using IJulia","text":"","category":"section"},{"location":"appendix/#Instructor-1","page":"Appendix","title":"Instructor","text":"","category":"section"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"Step Action/Response Comment\n1 $ docker start julia Start the IJulia.\n2 $ docker exec -it julia bash Start the Docker client.\n3 jovyan@40f8c3bcf0c1:~$ jupyter notebook list Display the token.\n jovyan@40f8c3bcf0c1:~$ jupyter notebook list Currently running servers: http://0.0.0.0:8888/?token=f394613a12c103a2de92e70aa34715b2183d58e3d5580a2e :: /home/jovyan \n4 Select the token In this case: f394613a12c103a2de92e70aa34715b2183d58e3d5580a2e.\n5 Ctrl-Shift-C Copy the token to the clipboard.\n6 Store the key somewhere, so you can email it to your students. \n7 $ Ctrl-D Exit Docker client.","category":"page"},{"location":"appendix/#Important-Docker-commands-1","page":"Appendix","title":"Important Docker commands","text":"","category":"section"},{"location":"appendix/#","page":"Appendix","title":"Appendix","text":"Action Comment\ndocker images Display all Docker Images.\ndocker ps Display all running containers.\ndocker ps - a Display all containers.\ndocker start <name or id> E.g docker start julia.\ndocker exec -it <name or id> <command> E.g docker exec -it julia bash.\ndocker exec -it <name or id> <command> E.g docker exec -it julia julia.\nCtrl-D Exit the container\ndocker stop <name or id> E.g docker stop julia.\ndocker rm -f <name or id> Delete a container.\ndocker rmi <image id> Delete a image.","category":"page"},{"location":"chapter6/#.-Creating-the-modules-1","page":"6 - Creating the modules","title":"6. Creating the modules","text":"","category":"section"},{"location":"chapter6/#Export-1","page":"6 - Creating the modules","title":"Export","text":"","category":"section"},{"location":"chapter6/#Course-1","page":"6 - Creating the modules","title":"Course","text":"","category":"section"},{"location":"chapter6/#Registration-1","page":"6 - Creating the modules","title":"Registration","text":"","category":"section"},{"location":"chapter8/#.-Creating-our-microservices-1","page":"8 - Creating our microservices","title":"8. Creating our microservices","text":"","category":"section"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"UNDER DEVELOPMENT!","category":"page"},{"location":"chapter8/#Docker-1","page":"8 - Creating our microservices","title":"Docker","text":"","category":"section"},{"location":"chapter8/#Dockerfile-1","page":"8 - Creating our microservices","title":"Dockerfile","text":"","category":"section"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"What I did on 12/01/2019.","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"Following the instructions on Dockerize an SSH service.","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"FROM ubuntu:18.04\n#FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y openssh-server\nRUN mkdir /var/run/sshd\n#RUN echo 'root:THEPASSWORDYOUCREATED' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]","category":"page"},{"location":"chapter8/#Inter-container-communication-1","page":"8 - Creating our microservices","title":"Inter container communication","text":"","category":"section"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"What I did on 12/01/2019.","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"Following the instructions on Dockerize an SSH service.","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"Created the container on Raspberry Pi.\nTried the connection; it works nice but I have to login with a password.","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"First created the Dockerfile, then:","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"Step Action Comment\n1 ssh pi@192.168.XXX.XXX Login on Raspberry Pi.\n2 $ mkdir test-ssh Create a new folder\n3 $ cd test-ssh Step into the folder\n4 Select the content of the Dockerfile above \n5 Ctrl-C Copy selected text to the clipboard\n6 $ nano Dockerfile Create a new empty file\n7 Shift-Ctrl-V Paste text on clipboard into nano\n8 Ctrl-O Save the file\n9 Ctrl-X Exit nano\n10 $ docker build -t eg_sshd . Create a Docker image from the Dockerfile\n11 $ docker run -d -P --name test_sshd eg_sshd Create a container\n12 $ docker port test_sshd 22 Find port number\n 0.0.0.0:32769 Response\n13 Ctrl-D Leave Raspberry Pi\n14 $ ssh root@192.168.XXX.XXX -p 32769 Login remote on container with ssh","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"note: Note\napt-get update && apt-get install -y julia -> doesn't work on Ubuntu 18.04Some Linux command I had to use because RUN echo 'root:THEPASSWORDYOUCREATED' | chpasswd didn't work either.adduser rob\nusermod -aG sudo rob\nsu rob\nsudo -i\nuserdel rob\nsee alsoI also had to run unminimize to get sudo available. unminimize did't work in the container on the Raspberry Pi -> you have to be root.Next step: create the certificates, so you don't have to login with a password (required by Julia). DONE.Yes, I can make a ssh container-container connection between my laptop and the Raspberry Pi. Ubuntu 18.04.Next step is to install Julia on both containers having Ubuntu 18.04 installed.","category":"page"},{"location":"chapter8/#How-to-Setup-Passwordless-SSH-Login-(obsolete?)-1","page":"8 - Creating our microservices","title":"How to Setup Passwordless SSH Login (obsolete?)","text":"","category":"section"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"What I tried three weeks before 12/01/2019: machine -> machine connection.","category":"page"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"Step Action Comment\n1 $ sudo apt-get update \n2 $ sudo apt-get install openssh-client Install ssh client on Ubuntu\n3 $ ls -al ~/.ssh/id_*.pub On Ubuntu\n4 $ ssh-keygen -t rsa -b 4096 -C \"your_email@domain.com\" On Ubuntu\n5 $ ls ~/.ssh/id_* On Ubuntu\n5 $ ssh-copy-id  pi@192.168.XXX.XXX Copy file to Raspberry Pi\n7 $ ssh pi@192.168.XXX.XXX Connect to raspberry pi\n8 $ chmod 700 ~/.ssh Change right the folder .ssh on Raspberry Pi\n9 $ chmod 600 ~/.ssh/authorized_keys Change right of the file autorized_keys on Raspberry Pi","category":"page"},{"location":"chapter8/#ToDo-1","page":"8 - Creating our microservices","title":"ToDo","text":"","category":"section"},{"location":"chapter8/#","page":"8 - Creating our microservices","title":"8 - Creating our microservices","text":"Procedure for passwordless container -> container communication.","category":"page"},{"location":"chapter8/#Channel-1","page":"8 - Creating our microservices","title":"Channel","text":"","category":"section"},{"location":"chapter8/#DockerCompose-1","page":"8 - Creating our microservices","title":"DockerCompose","text":"","category":"section"},{"location":"chapter3/#Set-up-the-design-1","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"","category":"section"},{"location":"chapter3/#What-you-will-learn-1","page":"3 - Set-up the design","title":"What you will learn","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Pages = [\"chapter3.md\"]","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"We start with an procedure Invoicing we want to automate with Julia. Next, we will look at the requirements set by domain driven design. We end with the design we will implement.","category":"page"},{"location":"chapter3/#A-procedure-as-a-starting-point-1","page":"3 - Set-up the design","title":"A procedure as a starting point","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"In 1994 we were delivering Lotus Notes instructor-led training in the Netherlands. We became ISO-9001 certified one year later. ISO is short for the International Organization for Standardization. A part of ISO is the section procedures.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"A procedure describes a workflow. It specifies the activities to be carried out by people or machines and the resources that are required to produce a result.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"An input triggers a process. Every action creates an output, which can be data, a product, or a service.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The example I use in the course is the procedure Invoicing.","category":"page"},{"location":"chapter3/#The-course-example-1","page":"3 - Set-up the design","title":"The course example","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"In 1998 we rewrote our procedures as a table. Every row represents an action. Next to the activities are the columns with roles involved with the work. We used the RASCI notation for the kind of task of a role:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Abbr Meaning Description\nR Responsible The person who is responsible for the execution of the activity.\nA Approves The person who approves the result before going to the next step.\nS Supports The members of the team.\nC Consults The person or entity to be consulted.\nI Informed The person to be notified about the result.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Procedure: Invoicing.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Roles: OM = Office Manage, AOM = Assistant Office Manager.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Input: A list of students who have shown up in the classroom.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Step Action AOM OM Output Tool Exception\n1 Create an invoice per student R A Created and authorized invoices Order file \n2 Archive a copy of the invoice R  Archived copy Accounts Receivable unpaid \n3 Send the invoice to the customer R I Invoice sent  \n4 Book the invoice R A Booked invoice General ledger \n5 Book the paid invoice R A Paid invoice Bank records, General ledger \n6 Archive the paid invoice R I Archived invoice Accounts Receivable paid ","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"End result: A paid invoice.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Let's see how we can automate the procedure with Julia. We tackle it with a technique of Domain Driven Design and the Onion architecture.","category":"page"},{"location":"chapter3/#Domain-Driven-Design-and-Onion-Architecture-1","page":"3 - Set-up the design","title":"Domain Driven Design and Onion Architecture","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The trend nowadays is to create application consisting of different unambiguous and autonomous units, running in containers:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"You can quickly up and downscale containers based on the demand.\nThe software programmers can use their preferred programming language.\nA unit is the owner of its data.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The onion architecture lends itself perfectly to the domain-driven design pattern. If you look at the design like it's an onion, it's a core with peels around it. The base consists of Julia.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The next peel is the domain. There must be coherence between its elements. The experts in this field speak the same language and use the same terms. Most items here are objects. You only use constructs from the core.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The next layer is the API. Here you only use elements from the core and the domain. The API consists of the functions you use in your program.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The outer peel is the Infrastructure layer. Its the connection with the external world. It uses the elements in the domain and API and adapters to match differences in technologies.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"An example is a REST request. If it is in JSON format, you have to convert it to a form you use in your software. After processing the inquiry, you turn it back to JSON. You can do so with adapters.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"When you write you the software, you only use the functions in the API and the Infrastructure layers.","category":"page"},{"location":"chapter3/#A-review-of-the-procedure-Invoicing-1","page":"3 - Set-up the design","title":"A review of the procedure Invoicing","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Looking at the Invoicing procedure, I see one domain or department, namely Account Receivable. It receives information from the process Training Delivery, which produces the list of students who have shown up in the classroom.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The resources are:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Order file.\nCSV list of bank records.\nGeneral Ledger.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Owner of:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Invoice","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Output","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Journalized unpaid invoices for General Ledger.\nJournalized paid invoices for General Ledger.\nReport of unpaid invoices.\nInvoice as PDF.","category":"page"},{"location":"chapter3/#Summarized-1","page":"3 - Set-up the design","title":"Summarized","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"We send the invoices to the customer by email. We store copies of the invoices locally. We sent a journalized copies to General Ledger. We need:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Dummy Order file module.\nDummy Training Delivery module.\nDummy General Ledger module.\nBank records file.","category":"page"},{"location":"chapter3/#The-design-1","page":"3 - Set-up the design","title":"The design","text":"","category":"section"},{"location":"chapter3/#Domain-1","page":"3 - Set-up the design","title":"Domain","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The domain objects are:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"Message.\nInvoice.\nInvoiceStatus: UNPAID, PAID.\nJournalRecord.","category":"page"},{"location":"chapter3/#API-Invoicing-1","page":"3 - Set-up the design","title":"API Invoicing","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The API contains the methods (functions) of the module. The methods use only elements from the core or of the domain. An overview of what I think we need:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"createInvoice(id::String, company::Company, order::Order, students::Array(String, 1))::Invoice\nupdateInvoiceStatus(invoice::Invoice; status=\"PAID\")::Invoice\ncreateJournalRecord(invoice::Invoice)::JournalRecord\ncreateJournalMessage(receiver::String, journalRecord::JournalRecord)::Message\nreadCSV(file::String)::DataFrame\nfindInvoice(df::DataFrame)::Invoice\nreportUnpaidInvoices(db::SQLiteDB, table::String)::Dataframe","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"DataFrames.jl,  makes it easy to work with data.","category":"page"},{"location":"chapter3/#Infrastructure-1","page":"3 - Set-up the design","title":"Infrastructure","text":"","category":"section"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"The methods of Infrastructure layer:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"connect(path::String)::SQLiteDB\ncreate(db::SQLiteDB, tableName::String, invoice::Invoice)\ngather(db::SQLiteDB, tableName::String, selection::String)::DataFrame\ncreatePDF(invoice::Invoice)::PDF\nsendInvoice(invoice::Invoice, pdf::PDF)","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"SQLite.jl is the Julia package for SQLite, which we will use in the course. You can use it as an on-disk database file, but also as an in-memory database. The last option is ideal for testing.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"I am thinking of Literate.jl as package to make PDFs.","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"ToDo:","category":"page"},{"location":"chapter3/#","page":"3 - Set-up the design","title":"3 - Set-up the design","text":"How to attach a PDF to an email?\nHow to send an email?","category":"page"},{"location":"chapter9/#.-Running-the-containers-1","page":"9 - Running the containers","title":"9. Running the containers","text":"","category":"section"},{"location":"chapter2/#.-Overview-Julia-1","page":"2 - Overview Julia","title":"2. Overview Julia","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Pages = [\"chapter2.md\"]","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"There are many excellent courses on Julia. We suppose that the reader has some basic knowledge of Julia, as in Think Julia. We recapitulate the most important differences with other languages.","category":"page"},{"location":"chapter2/#Concatenation-1","page":"2 - Overview Julia","title":"Concatenation","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"In Julia is the asterisk (*) used as a concatenation symbol instead of the plus-sign (+) in other languages.","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> a = \"Hello \"\n\"Hello\"\n\njulia> b = \"World!\"\n\"World!\"\n\njulia> c = a * b\n\"Hello World!\"","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter2/#Iteration-1","page":"2 - Overview Julia","title":"Iteration","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"See Think Julia, 7. Iteration","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Some examples.","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> range = 0:0.1:0.5π # values from 0 to 0.5π radians (90°), with a step value of 0.1 radian\n0.0:0.1:1.5\n\njulia> y = [sin(x) for x in range] # calculate sin for the values in the variable range\n16-element Array{Float64,1}:\n 0.0                \n 0.09983341664682815\n 0.19866933079506122\n 0.2955202066613396\n 0.3894183423086505\n 0.479425538604203  \n 0.5646424733950355\n 0.6442176872376911\n 0.7173560908995228\n 0.7833269096274834\n 0.8414709848078965\n 0.8912073600614354\n 0.9320390859672264\n 0.963558185417193  \n 0.9854497299884603\n 0.9974949866040544\n\njulia> using Plots\n\njulia> plot(x -> sin(x) , 0:0.1:2π) # passing a value to sin(x)\n\njulia> plot(sin, 0:0.1:2π) # works also\n","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter2/#Help-1","page":"2 - Overview Julia","title":"Help","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"\njulia> ?\nhelp?> sin\nsearch: sin sinh sind sinc sinpi sincos asin using isinf asinh asind isinteger\n\n  sin(x)\n\n  Compute sine of x, where x is in radians.\n\n  ────────────────────────────────────────────────────────────────────────────\n\n  sin(A::AbstractMatrix)\n\n  Compute the matrix sine of a square matrix A.\n\n  If A is symmetric or Hermitian, its eigendecomposition (eigen) is used to\n  compute the sine. Otherwise, the sine is determined by calling exp.\n\n  Examples\n  ≡≡≡≡≡≡≡≡≡≡\n\n  julia> sin(fill(1.0, (2,2)))\n  2×2 Array{Float64,2}:\n   0.454649  0.454649\n   0.454649  0.454649","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter2/#User-defined-functions-1","page":"2 - Overview Julia","title":"User defined functions","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> function f(x, ϕ, b)\n         sin(x + ϕ) + b\n       end\nf (generic function with 1 method)\n\njulia> 0.3f(0.5π, 0.1π, 1)\n0.5853169548885461\n","category":"page"},{"location":"chapter2/#Multiple-dispatch-1","page":"2 - Overview Julia","title":"Multiple dispatch","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"In object oriented languages like Java we can overload a method. Julia, however, is a functional language. Here we can use the same function name as long as the signatures are different.","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> f(x) = sin(x) # function with one argument\nf (generic function with 1 methods)\n\njulia> f(x, ψ) = sin(x - ψ)  # function with two arguments\nf (generic function with 2 methods)\n\njulia> f(x, ψ, b) = sin(x - ψ) + b   # function with three arguments\nf (generic function with 3 methods)\n\njulia> f(x::Int64) = sin(x/180 * π) # function in degrees, argument has to be an integer\nf (generic function with 4 methods)\n\njulia> methods(f) # show all methods of the function f\n# 4 methods for generic function \"f\":\n[1] f(x::Int64) in Main at REPL[10]:1\n[2] f(x) in Main at REPL[2]:1\n[3] f(x, ψ) in Main at REPL[3]:1\n[4] f(x, ψ, b) in Main at REPL[4]:1\n\njulia> f(0.5π) # 90 degrees in radians\n1.0\n\njulia> f(0.5π, 0.1π) # with 0.1π phase shift in radians\n0.9510565162951536\n\njulia> f(0.5π, 0.1π, 1)\n1.9510565162951536\n\njulia> f(90) # 90 degrees as integer\n1.0\n\njulia> f(90.0) # should be 0.5π\n0.8939966636005579\n","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter2/#User-defined-data-structures-1","page":"2 - Overview Julia","title":"User defined data structures","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Julia is not a object oriented programming language. But you can define data structures with constructors, and use the dot notation to refer to its data elements.","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"\njulia> struct Subscriber\n           id::String\n           name::String\n           email::String\n           #constructors\n           Subscriber(name::String) = new( createKey(name), name, \"\" )\n           Subscriber(name::String, email::String) = new( createKey(name), name, email )\n       end # defined Subscriber object\n\njulia> createKey(name::String) = string(hash(name * string(time())))\ncreateKey (generic function with 1 method)\n\njulia> daisy = Subscriber(\"Daisy\")\nSubscriber(\"6761641919537447636\", \"Daisy\", \"\")\n\njulia> daisy.name\n\"Daisy\"","category":"page"},{"location":"chapter2/#Plotting-data-1","page":"2 - Overview Julia","title":"Plotting data","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"See Plots","category":"page"},{"location":"chapter2/#Installing-the-Plots-package-1","page":"2 - Overview Julia","title":"Installing the Plots package","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> ]\n\n(v1.1) pkg> add Plots <Enter>\n\n(v1.1) pkg> Ctrl-C\n\njulia>","category":"page"},{"location":"chapter2/#Using-Plots-1","page":"2 - Overview Julia","title":"Using Plots","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"\njulia> using Plots; gr()\n\njulia> plot(x -> sin(x/180 * π), 0:01:360, xlabel=\"Degrees\", title=\"Plot sin\", label=\"No phase shift\")\n\njulia> ψ = 30 # degrees\n30\n\njulia> plot!( x -> sin( (x - ψ)/180 * π ), 0:01:360, label=\"$(ψ)° phase shift\")\n","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter2/#Useful-to-know-Version-1.1.1-(2019-05-16)-1","page":"2 - Overview Julia","title":"Useful to know - Version 1.1.1 (2019-05-16)","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Testing conditions","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> x = 5\n5\n\njulia> 0 < x < 6\ntrue\n\njulia> 0 ≤ x ≤ 5 # ≤  is \\le<Tab>\ntrue\n\njulia> 0 ≤ x ≤ 4\nfalse\n\njulia> 5 ≥ x ≥ 0 # ≥ is \\ge<Tab>\ntrue\n\njulia> x ≠ 4 # ≠ is \\ne<Tab>\ntrue\n","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Sets, symbolsπ","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"julia> a = [1, 2, 3]\n3-element Array{Int64,1}:\n 1\n 2\n 3\n\njulia> b = [3, 4, 5]\n3-element Array{Int64,1}:\n 3\n 4\n 5\n\njulia> a ∩ b # ∩ is \\cap<Tab>, also intersect(a, b)\n1-element Array{Int64,1}:\n 3\n\njulia> a ∪ b # ∩ is \\cup<Tab>, also union(a, b)\n5-element Array{Int64,1}:\n 1\n 2\n 3\n 4\n 5\n\njulia> symdiff(a, b) # forgot the symbol\n4-element Array{Int64,1}:\n 1\n 2\n 4\n 5\n\njulia> 3 ∈ a # 3 element of a, \\in<Tab>\ntrue\n\njulia> 3 ∉ a # 3 not an element of a, \\notin<Tab>\nfalse\n\njulia> a ⊆ b # a subset of b, ⊆ is \\subseteq<Tab>\nfalse\n\njulia> b ⊇ [3, 4] # b is superset of [3, 4], ⊆ = \\supseteq<Tab>\ntrue","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Natural constant ℯ and π","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"\njulia> ℯ # \\euler<Tab>\nℯ = 2.7182818284590...\n\njulia> π # \\pi<Tab>\nπ = 3.1415926535897...\n\njulia> factorial(4)\n24\n\njulia> 1*2*3*4\n24","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Functional programming","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"\njulia> a = [2, 3, 4]\n3-element Array{Int64,1}:\n 2\n 3\n 4\n\njulia> map(x -> x^2, a)\n3-element Array{Int64,1}:\n 4\n 9\n16\n\njulia> reduce( (x, y) -> x + y, a)\n9\n\njulia> sum(a)\n9\n\njulia> reduce( (x, y) -> x^2 + y^2, a)\n185\n\njulia> (2^2 + 3^2)^2 + 4^2\n185","category":"page"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter2/#Summary-1","page":"2 - Overview Julia","title":"Summary","text":"","category":"section"},{"location":"chapter2/#","page":"2 - Overview Julia","title":"2 - Overview Julia","text":"Top","category":"page"},{"location":"chapter5/#.-Writing-test-software-1","page":"5 - Writing test software","title":"5. Writing test software","text":"","category":"section"},{"location":"chapter5/#runtest.jl-1","page":"5 - Writing test software","title":"runtest.jl","text":"","category":"section"},{"location":"chapter5/#Cases-1","page":"5 - Writing test software","title":"Cases","text":"","category":"section"},{"location":"chapter5/#","page":"5 - Writing test software","title":"5 - Writing test software","text":"@testset \"SubscriberType test\" begin\n    @test SubscriberType(0) == MEAN_CALCULATOR\n    @test SubscriberType(1) == STD_CALCULATOR\n    @test SubscriberType(2) == PLOTTER\nend","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"(Image: AppliGate)","category":"page"},{"location":"#Building-Business-Applications-with-Julia-1","page":"Business Applications with Julia","title":"Building Business Applications with Julia","text":"","category":"section"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"In this course, you learn to create Julia modules. The software you write makes use of these modules and runs in Docker containers.","category":"page"},{"location":"#Preface-1","page":"Business Applications with Julia","title":"Preface","text":"","category":"section"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"In July 2018, I read an article about a new programming language that was rapidly gaining in popularity, Julia. It appealed to me how you could define a function. Almost exactly as I learned it during my bachelor study Electronics: f(x) = 2x² + 3x + 1, in Julia written as 2x^2 + 3x + 1. Then I set up a project to learn how to implement the observer pattern. It was easy, but I left it out because I was working on Scala at that moment.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"While working with Scala, I came in touch with the Onion Architecture, after watching Wade Waldron's presentation, Domain-Driven Design, and Onion Architecture. Since then, I use it.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"The ease with which I could build business applications with Julia stayed with me.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"At the beginning of 2019, a recruiter told me that the interest in Scala in the Netherlands was waning. Should I continue with Scala?","category":"page"},{"location":"#A-course-was-born-1","page":"Business Applications with Julia","title":"A course was born","text":"","category":"section"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"I decided to stop with Scala and picked up my Julia observer trial project again. From the code, I created a Julia package, RbO.jl.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"It turned out that you can create effective documentation, using the package Documenter.jl. You write it in the markdown language and can insert examples of how to use your code. During the creation of the HTML code, you can have the cases tested, which is useful if you later expand the module and generate the documentation again. The documentation can be seen at the GitHub Pages.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"I had already a GitHub Pages profile, and thought: \"Why not set up the AppliGate website in this way and link it to my profile.\" I did it: https://www,appligate.nl.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"With trying out so many things with Julia, the problem arose at a certain point that I could not find specific trials back in my notes. After the success of the website, I thought: \"Why not set up a course where I can register all the interesting things?\".","category":"page"},{"location":"#Developing-Business-Applications-with-Julia-1","page":"Business Applications with Julia","title":"Developing Business Applications with Julia","text":"","category":"section"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"The result is this course Business Applications with Julia I am creating now.","category":"page"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"Rob Bontekoe","category":"page"},{"location":"#Index-(Course-is-under-development)-1","page":"Business Applications with Julia","title":"Index (Course is under development)","text":"","category":"section"},{"location":"#","page":"Business Applications with Julia","title":"Business Applications with Julia","text":"Pages = [\"index.md\",\n\"chapter1.md\",\n\"chapter2.md\",\n\"chapter3.md\",\n\"appendix.md\",\n\"references.md\"]","category":"page"}]
}
